
###30 aprile
install.packages("rasterdiv")
 #uso della riflessione della luce per capire l'indice di vegetazione di una determinata foto (si può estrapolare il tipo di vegetazione, lo status della vegetazione, etc)
 #In un pixel di vegetazione avremo il massimo di riflettanza nell'infrarosso vicino, mentre avremo il minimo di riflettanza nel rosso (ricontrolla sta roba perché non ho capito nulla)
 #massimo = 255   minimo = 0
 
setwd("C:/lab/")
library(raster)
library(RStoolbox)
defor1 <- brick("defor1.png")   #carichiamo le due immagini
defor2 <- brick("defor2.png")
 
par(mfrow=c(2,1))
plotRGB(defor1, r=1, g=2, b=3, stretch="lin")
plotRGB(defor2, r=1, g=2, b=3, stretch="lin")    #plotta le due immagini assieme con i colori RGB

unione <- defor1$defor1.1 - defor1$defor1.2   #in questo mdo vediamo lo stato della vegetazione della prima foto

cl <- colorRampPalette(c('darkblue','yellow','red','black'))(100) # specifying a color scheme  #scegliamo un colore un po' più roffo
plot(unione, col=cl)  #ANDRE QUESTO SERVE PER PLOTTARE STA ROBA NON QUELLE ROBE MAP$ E COMPAGNIA VARIA NON SO PERCHE MA VABBE RIP RIP RIIIIP


plot(unione, col=cl, main="qui dentro scrivi il nome bello che vuoi dare al codice")   
dvi2 <- defor2$defor2.1 - defor2$defor2.2  #questo fa la stessa roba dello stato della vegetazione ma con la seconda mappa
plot(dvi2, col=cl, main="DVI at time 2")


    
par(mfrow=c(2,1))
plot(unione, col=cl, main="DVI at time 1")   #uniamo come solito le due mappa per compararle
plot(dvi2, col=cl, main="DVI at time 2")

difdvi <- unione - dvi2    #unisce le due mappe per compararle meglio

dev.off()        #facciamo dev.off per "riordinare" la mappa
cld <- colorRampPalette(c('blue','white','red'))(100)   #qua decidiamo i colori come solito
plot(difdvi, col=cld)    #vabbè insomma, plottiamo come sempre


#come si calcola il DVI(difference vegetation index)? s fa (NIR-RED)/(NIR+RED). Lo scriviamo in questa maniera:
ndvi1 <- (defor1$defor1.1 - defor1$defor1.2) / (defor1$defor1.1 + defor1$defor1.2)
plot(ndvi1, col=cl) 


ndvi2 <- (defor2$defor2.1 - defor2$defor2.2) / (defor2$defor2.1 + defor2$defor2.2)    #creiamo un'altro DVI, per la seconda immagine però (quindi la defor2)
plot(ndvi2, col=cl) 

vi <- spectralIndices(defor1, green = 3, red = 2, nir = 1)   #con questo escono fuori un casino di indici spettrali  (15 in totale)
plot(vi, col=cl)


vi2 <- spectralIndices(defor2, green = 3, red = 2, nir = 1)  #facciamo la stessa roba come al solito con l'altra mappa, quindi defor2
plot(vi2, col=cl)

difndvi <- ndvi1 - ndvi2
dev.off()
cld <- colorRampPalette(c('blue','white','red'))(100) 
plot(difndvi, col=cld)             #sottriamo i colori delle due mappe ndvi1 e ndvi2. La risultante sarà una mappa con macchié più rosse nelle zone più deforestate

### lezione 5 maggio 


setwd("C:/lab/")
library(raster)
library(rasterVis)
library(rasterdiv)
library(RStoolbox)

plot(copNDVI)  #fa vedere l'intero globo con la copertura forestale

copNDVI <- reclassify(copNDVI, cbind(253:255, NA))   #vogliamo togliere la massa d'acqua blu perché non ci interessa. con questo codice ce la facciamooooo
plot(copNDVI)    #ecco ora si vede l'indice di vegetazione boschiva ma senza il macchione blu degli oceani e mari

levelplot(copNDVI)   #con questa mappa si denotano le zone più desertiche/senza vegetazione e più vegetate, usando come indice il livello di evotraspirazione (che sarà alto in ambienti vegetati e nullo in ambienti desertici)


install.packages("ggplot2")   #altro pacchetto da installa re riguardante il gg plot
library(ggplot2)

defor1 <- brick("defor1.png")   #inseriamo con brick l'immagine defor1
plotRGB(defor1, r=1, g=2, b=3, stretch="lin")

defor2 <- brick("defor2.png") 
plotRGB(defor2, r=1, g=2, b=3, stretch="lin")
ggRGB(defor2, r=1, g=2, b=3, stretch="lin")   #in questo compare una sorta di griglia (grazie GG ploooooot) (sono delle coordinate)

par(mfrow=c(1,2))
plotRGB(defor1, r=1, g=2, b=3, stretch="lin")
plotRGB(defor2, r=1, g=2, b=3, stretch="lin")

install.packages("gridExtra")   #INSTALLA STO PACCHETTO NUOVOOOOOO
library(gridExtra)

# multiframe with ggplot2 and gridExtra
p1 <- ggRGB(defor1, r=1, g=2, b=3, stretch="lin")     #mette le due immagini assieme con le griglie e ordinate in maniera differente
p2 <- ggRGB(defor2, r=1, g=2, b=3, stretch="lin")
grid.arrange(p1, p2, nrow=2)


############7 maggio lezione
library(raster)
library(RStoolbox) 
library(ggplot2)
library(gridExtra)
setwd("C:/lab/")

defor1 <- brick("defor1.png")
defor2 <- brick("defor2.png")
d1c <- unsuperClass(defor1, nClasses=2)  #questo lo avevamo già fatto, è quello che creava Lorentz
plot(d1c$map)

d2c <- unsuperClass(defor2, nClasses=2)
plot(d2c$map)

d2c3 <- unsuperClass(defor2, nClasses=3)
plot(d2c3$map)

freq(d1c$map)  #calcola la frequenza fra la prima e la seconda classe fra le due immagini (in questo caso, la frequenza totale di foreste è molto alto rispetto al resto (se si somano i due valori si raggiungono le dimensioni totali dell'immagine)
s1=341292   #s è la dimensione
 
freq(d2c$map) 
s2=342726   


s1 <- 341292 
prop1 <- freq(d1c$map) / s1
s2 <- 342726
prop2 <- freq(d2c$map) / s2   #in questo modo, abbiamo proporzionato i valori dimesnionali, in mdo da essere più accurati e avere dati simili


#ora faremo una tabella/dataset per paragonare i dati pre deforestazione e post deforestazione
cover <- c("forest", "agriculture")
percent_1992 <- c(89.83, 10.16)  #qui decidiamo le assi e ordinate dei dati
percent_2006 <- c(52.06, 47.93)

percentages <- data.frame(cover, percent_1992, percent_2006)
percentages

#ora usiamo ggplot per creare una rappresentazione illustrativa del dato
par(mfrow=c(1,2))
p1 <- ggplot(percentages, aes(x=cover, y=percent_2006, color=cover)) + geom_bar(stat="identity", fill="white")
p2 <- ggplot(percentages, aes(x=cover, y=percent_1992, color=cover)) + geom_bar(stat="identity", fill="white")
 #ora scrivendo "p1" o "p2" ci verranno fuori dei grafici a barre con le percentuali di land cover

grid.arrange(p1, p2, nrow=1)  #con questa funzione si vedono i due grafici a barre assieme  #QUA NON SI USA PAR PERCHE ESSO FUNZIONA PER I PLOT


