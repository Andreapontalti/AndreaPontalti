##lezione 21 aprile
#
instal.packages("RStoolbox")

setwd("C:/lab/")
library(raster)
library(RStoolbox)

so <- brick("Solar_Orbiter_s_first_views_of_the_Sun_pillars.jpg")     #brick serve per pescare un'immagine (o comunque un pacchetto di dati) esterna e inserirla all'interno a R (e gli da anche un nome più semplificato che decidiamo noi usando sta freccia)
plot(so) #plotta normalmente l'immagine
plotRGB(so, 1, 2, 3, stretch="lin")     #plotta in base ai colori RGB
plotRGB(so, 1, 3, 2, stretch="lin")

   #Unsupervised classification#### Tecnica che consiste nel fornire al sistema informatico una serie di input che egli riclassificherà ed organizzerà sulla base di caratteristiche comuni per cercare di effettuare ragionamenti e previsioni sugli input successivi
   #permette di classificare ad esempio quando una determinata patch del suolo risulta essere X (es. acqua) o Y (es. bosco)

soc <- unsuperClass(so, nClasses=3)  #creiamo una unsupervised classification con 3 classi di colore. il risultante si chiamerà "soc"
plot(soc$map)   #plottiamo soc
set.seed(16)

soc <- unsuperClass(so, nClasses=5)

#Unsupervised classification però con 20 classi (che è quello che hai fatto)
socca <- unsuperClass(so, nClasses=20)    #uso socca e non soc perché se no mi autoelimina quella con 3 classi
plot(socca$map)

cl <- colorRampPalette(c('yellow','red','black'))(100)  #in questa maniera si può decidere quale gamma di colori utilizzare nella unsupervised classification

sun <- brick("sun.png.jpg")
lorentz <- brick("lorentz0.jpg")  #PUOI FARLO CON LORENTZ AAAAAAAAAAAAAAAH
sunny <-unsuperClass(sun, nClasses=8)

puglia <- brick("puglia_merda.png")
schifo <-unsuperClass(puglia, nClasses=4)


mafia <- brick("punta_marina.png") 
pavoni <-unsuperClass(mafia, nClasses=8)

rex <- brick("Feather_Tyrannosaurus_Adult_The_Isle.png")
rexy <-unsuperClass(rex, nClasses=18)

odonato <- brick("b362c426-5d4e-426a-8558-930e8e81fa15.jpg") 
libro <-unsuperClass(odonato, nClasses=18)
plot(libro$map)


########## lezione 23 aprile 
#lavoriamo sul grand canyon

setwd("C:/lab/")
library(raster)    #inseriamo la solit alibreria
gc <- brick("gran_canyon.jpg")   #brickiamo l'immagine del gran canyon e chiamiamola gc
plotRGB(gc, r=1, g=2, b=3, stretch="lin")  #modifichiamo un po' lo stretch dei colori
plotRGB(gc, r=1, g=2, b=3, stretch="hist") #qui usiamo lo stretch modalità istogramma
gc2 <- brick("canyon.jpg")
plotRGB(gc2, r=1, g=2, b=3, stretch="lin")  #modifichiamo un po' lo stretch dei colori
plotRGB(gc2, r=1, g=2, b=3, stretch="hist") #qui usiamo lo stretch modalità istogramma (sembra più scura, c'è più contrasto)

library(RStoolbox)   #senza sta libreria non funzia nulla rip
gcc2 <- unsuperClass(gc2, nClasses=2)  #funzione utilizzata per classificare i colori in due classi (in questo caso)
plot(gcc2$map)

gcc4 <- unsuperClass(gc, nClasses=4)  #qui classifica su 4 classi
plot(gcc4map)





#si possono vedere file/immagini con diversa varianza/variabilità utilizzando delle funzioni. Queste prendono il nome di analisi multivariate
setwd("C:/lab/")
library(raster) #questa libreria carica solo un set per volta
p224r63_2011 <- brick("p224r63_2011_masked.grd")  #brickiamo come solito per caricare l'immagine
plot(p224r63_2011)
plot(p224r63_2011$B1_sre, p224r63_2011$B2_sre, col="red", pch=19, cex=2)  #plottiamo in una banda 1 e 2 la foto. Uscirà un piano cartesiano XY con una scia di punti che studiano la varianza dei colori
pairs(p224r63_2011)  #mette in correlazione tutte le variabili (ossia le bande) della figura. Ne esce un insieme di diagrammi e numeri


##### 28 aprile lesìzione

library (raster)
library(RStoolbox)
setwd("C:/lab/")

p224r63_2011 <- brick("p224r63_2011_masked.grd")
p224r63_2011
pairs(p224r63_2011)  #mostra lo schema di ieri, con indici di correlazione e variazione vari
p224r63_2011res <- aggregate(p224r63_2011, fact=10)  #aggrega i pixel per diminuire la risoluzione della mappa( ma almeno puoi usare R senza aspettare 5 ore che il pc carica)

par(mfrow=c(2,1))            #questo serviva per aprire più immagini in una singola icona/mappa, non so se ti ricordi dai plot preedenti
plotRGB(p224r63_2011, r=4, g=3, b=2, stretch="lin")        #le plottiamo usando i colori RGB
plotRGB(p224r63_2011res, r=4, g=3, b=2, stretch="lin")  

p224r63_2011res_pca <- rasterPCA(p224r63_2011res)    #dovrebbe generare una nuova immagine tramite questa funzione
summary(p224r63_2011res_pca$model)   #spiega quasi la totalità della varianza in questo modello (è praticamente un riassunto)
p224r63_2011res_pca  
plotRGB(p224r63_2011res_pca$map, r=1, g=2, b=3, stretch="lin")

str(p224r63_2011res_pca)  #fa comparire messaggi buffi..meglio se riguardi la lezione con calma dopo




defor1 <- brick("defor1.png")
defor2 <- brick("defor2.png")




